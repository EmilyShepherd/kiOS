#!/bin/busybox sh
#

export PATH=/bin
export BB=$PATH/busybox
BOOTPART=/dev/mmcblk1p1
DATAPART=/dev/mmcblk1p2
CONFIGDIR=etc
BOOTSTRAP=bootstrap.tar.xz

_mount() {
  local dir=$1
  shift
  $BB mkdir -p "$dir"
  $BB mount "$@" "$dir"
}

_bmount() {
  $BB mkdir -p $2
  _mount $1 --bind $2
}

tmpmount() {
  _mount $1 -o rw,nosuid,nodev -t tmpfs tmp
}

mount_boot() {
  _mount /boot -o rw $BOOTPART
  _bmount /lib/modules /boot/kernel/modules
  _bmount /etc/ssl/certs /boot/$CONFIGDIR/ssl
  _bmount /etc/kubernetes /boot/$CONFIGDIR/kubernetes
}

mount_cgroups() {
  while read -r _subsys_name _hierarchy _num_cgroups _enabled
  do
    if test $_enabled == "1"; then
      _mount /sys/fs/cgroup/$_subsys_name -t cgroup -o $_subsys_name cgroup
    fi
  done < /proc/cgroups
}

mount_fs() {
  _mount /proc -o nosuid,noexec,nodev -t proc proc
  _mount /sys -o nosuid,noexec,nodev -t sysfs sys
  _mount /dev -o mode=0755,nosuid -t devtmpfs dev
  _mount /dev/pts -o mode=0620,gid=5,nosuid,noexec -n -t devpts devpts
  _mount /dev/shm -o mode=1777,nosuid,nodev -n -t tmpfs shm
  _mount /dev/kernel/security -n -t securityfs securityfs
  _mount /sys/fs/cgroup -t tmpfs -o mode=0755 cgroup
  mount_cgroups
  tmpmount /run
  tmpmount /tmp
  tmpmount /var
  $BB mkdir /var/log /var/lib /var/tmp /var/cache /var/run
  mount --make-shared /var
}

wait_for_devices() {
  $BB mdev -s
}

mount_data() {
  _mount /var/lib -o rw $DATAPART
  _bmount /var/log /var/lib/log
}

set_hostname() {
  local hostname=boot/$CONFIGDIR/hostname
  test -f $hostname && $BB cat > /proc/sys/kernel/hostname
}

set_machineid() {
  local machineid=boot/$CONFIGDIR/machineid
  if test -f $machineid
  then
    $BB cat $machineid > /etc/machine-id
  else
    $BB cat /proc/device-tree/serial-number > /etc/machine-id
  fi
}

for arg in $($BB cat /proc/cmdline)
do
  echo $arg | read -d'=' param value
  case $param in
    ki.bootpart) BOOTPART=$value ;;
    ki.datapart) DATAPART=$value ;;
    ki.configdir) CONFIGDIR=$value ;;
    ki.bootstrap) BOOTSTRAP="$BOOTSTRAP $value" ;;
  esac
done

mount_fs
mount_cgroups
wait_for_devices
mount_boot
mount_data
set_hostname
set_machineid

# This directory needs to exist before kubelet starts, as it will use it
# to recieve graceful shutdown orders.
$BB mkdir -p /run/system

$BB iplink set dev lo up
$BB iplink set dev eth0 up

echo 1 > /proc/sys/net/ipv4/ip_forward

for archive in $BOOTSTRAP
do
  afile=/boot/$archive
  if test -f $afile
  then
    $BB xzcat $afile | $BB tar x
    $BB rm $afile
  fi
done
